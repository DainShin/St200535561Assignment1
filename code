package com.example.st200535561assignment1;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.chart.*;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class Main extends Application {
    @Override
    public void start(Stage primaryStage) throws IOException {

        /*
        String user = "root";
        String password = "0000";
        String url = "jdbc:mysql://127.0.0.1:3306/unemployment";

        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(url, user, password);
            stmt = con.createStatement();
            String sql = "SELECT \n" +
                    "    CONCAT(\n" +
                    "        FLOOR(YEAR(STR_TO_DATE(date, '%Y-%m-%d')) / 10) * 10 + 1, \n" +
                    "        '-', \n" +
                    "        FLOOR(YEAR(STR_TO_DATE(date, '%Y-%m-%d')) / 10) * 10 + 10\n" +
                    "    ) AS decade_group,\n" +
                    "    AVG(overall_rate) AS overall_average_rate\n" +
                    "FROM\n" +
                    "    df_unemployment_rates\n" +
                    "GROUP BY\n" +
                    "    decade_group\n" +
                    "HAVING \n" +
                    "    decade_group BETWEEN '1948' AND '2018'  -- 1948부터 2018까지 10년 단위 데이터\n" +
                    "ORDER BY\n" +
                    "    decade_group;";
            ResultSet rst = stmt.executeQuery(sql);

            ArrayList<String> decades = new ArrayList<>();
            ArrayList<Double> rates = new ArrayList<>();

            while(rst.next()) {
                decades.add(rst.getString("decade_group"));
                rates.add(rst.getDouble("overall_average_rate"));
            }
            rst.close();

            CategoryAxis xAxis = new CategoryAxis();
            xAxis.setLabel("Decade");

            NumberAxis yAxis = new NumberAxis();
            yAxis.setLabel("Average Rate");

            BarChart<String, Number> barChart = new BarChart<>(xAxis, yAxis);
            XYChart.Series<String, Number> dataSeries1 = new XYChart.Series<>();
            dataSeries1.setName("UnEmployment Table");

            for(int i = 0; i < decades.size(); i++) {
                dataSeries1.getData().add(new XYChart.Data<>(decades.get(i), rates.get(i)));
            }
            barChart.getData().add(dataSeries1);

            VBox vbox = new VBox(barChart);
            Scene scene = new Scene(vbox, 400, 200);

            primaryStage.setScene(scene);
            primaryStage.setHeight(500);
            primaryStage.setWidth(450);

            primaryStage.show();
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
                if (con != null) {
                    con.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }*/

        String user = "root";
        String password = "0000";
        String url = "jdbc:mysql://127.0.0.1:3306/unemployment";

        Connection con = null;
        Statement stmt = null;

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection(url, user, password);
            stmt = con.createStatement();
            String sql1 = "SELECT \n" +
                    "    CONCAT(\n" +
                    "        FLOOR(YEAR(STR_TO_DATE(date, '%Y-%m-%d')) / 10) * 10 + 1, \n" +
                    "        '-', \n" +
                    "        FLOOR(YEAR(STR_TO_DATE(date, '%Y-%m-%d')) / 10) * 10 + 10\n" +
                    "    ) AS decade_group,\n" +
                    "    AVG(men_rate) AS men_rate\n" +
                    "FROM\n" +
                    "    df_sex_unemployment_rates\n" +
                    "GROUP BY\n" +
                    "    decade_group\n" +
                    "HAVING \n" +
                    "    decade_group BETWEEN '1948' AND '2018'  -- 1948부터 2018까지 10년 단위 데이터\n" +
                    "ORDER BY\n" +
                    "    decade_group;";

            String sql2 = "SELECT \n" +
                    "    CONCAT(\n" +
                    "        FLOOR(YEAR(STR_TO_DATE(date, '%Y-%m-%d')) / 10) * 10 + 1, \n" +
                    "        '-', \n" +
                    "        FLOOR(YEAR(STR_TO_DATE(date, '%Y-%m-%d')) / 10) * 10 + 10\n" +
                    "    ) AS decade_group,\n" +
                    "    AVG(women_rate) AS women_rate\n" +
                    "FROM\n" +
                    "    df_sex_unemployment_rates\n" +
                    "GROUP BY\n" +
                    "    decade_group\n" +
                    "HAVING \n" +
                    "    decade_group BETWEEN '1948' AND '2018'  -- 1948부터 2018까지 10년 단위 데이터\n" +
                    "ORDER BY\n" +
                    "    decade_group;";

            ResultSet rst1 = stmt.executeQuery(sql1);

            ArrayList<String> decades = new ArrayList<>();
            ArrayList<Double> menRates = new ArrayList<>();

            while(rst1.next()) {
                decades.add(rst1.getString("decade_group"));
                menRates.add(rst1.getDouble("men_rate"));
            }
            rst1.close();

            ResultSet rst2 = stmt.executeQuery(sql2);
            ArrayList<Double> womenRates = new ArrayList<>();
            while(rst2.next()) {
                womenRates.add(rst2.getDouble("women_rate"));
            }
            rst2.close();

            CategoryAxis xAxis = new CategoryAxis();
            xAxis.setLabel("Decade");

            NumberAxis yAxis = new NumberAxis();
            yAxis.setLabel("Gender Average Rate");

            LineChart<String, Number> lineChart = new LineChart<>(xAxis, yAxis);

            XYChart.Series<String, Number> menData = new XYChart.Series<>();
            menData.setName("men");

            for(int i = 0; i < decades.size(); i++) {
                menData.getData().add(new XYChart.Data<>(decades.get(i), menRates.get(i)));
            }

            XYChart.Series<String, Number> womenData = new XYChart.Series<>();
            womenData.setName("women");

            for(int i = 0; i < decades.size(); i++) {
                womenData.getData().add(new XYChart.Data<>(decades.get(i), womenRates.get(i)));
            }

            lineChart.getData().addAll(menData,womenData);



            VBox vbox = new VBox(lineChart);
            Scene scene = new Scene(vbox, 400, 200);

            primaryStage.setScene(scene);
            primaryStage.setHeight(500);
            primaryStage.setWidth(450);

            primaryStage.show();
        } catch (SQLException | ClassNotFoundException e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
                if (con != null) {
                    con.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        launch();
    }

}
